install.packages("mice")
source("https://bioconductor.org/biocLite.R")
biocLite("impute")
install.packages(pcaMethods)
install.packages("pcaMethods")
library(pcaMethods)
source("https://bioconductor.org/biocLite.R")
biocLite("pcaMethods")
install.packages("sas7bdat")
library(sas7bdat)
library(sas7bdat)
df<-read.sas7bdat("/Users/agni/Dropbox/MIT/Framingham Application/Biolincc/Datasets/framoffspring/Datasets/vr_meds_ex08_1_0280d.sas7bdat")
View(df)
install.packages("GLMNet")
install.packages("glmnet")
library(glmnet)
Hematocritexperiment6noGluc_train <- read.csv("~/Dropbox (Personal)/Framingham Cohort Pehnotype Data/Final Models/Cohort 2/data/Hematocritexperiment6noGluc_train.csv")
View(Hematocritexperiment6noGluc_train)
Hematocritexperiment6noGluc_test <- read.csv("~/Dropbox (Personal)/Framingham Cohort Pehnotype Data/Final Models/Cohort 2/data/Hematocritexperiment6noGluc_test.csv")
View(Hematocritexperiment6noGluc_test)
experiment2_train <- read.csv("~/Dropbox (Personal)/Framingham Cohort Pehnotype Data/Final Models/Cohort 1/data/experiment2_train.csv")
View(experiment2_train)
experiment2_test <- read.csv("~/Dropbox (Personal)/Framingham Cohort Pehnotype Data/Final Models/Cohort 1/data/experiment2_test.csv")
View(experiment2_test)
summary(Hematocritexperiment6noGluc_train$Age)
4598+14195
12683+4298
unique(Hematocritexperiment6noGluc_test$PID)+unique(Hematocritexperiment6noGluc_train$PID)
length(unique(Hematocritexperiment6noGluc_test$PID))
length(unique(Hematocritexperiment6noGluc_train$PID))
length(unique(Hematocritexperiment6noGluc_test$PID))+length(unique(Hematocritexperiment6noGluc_train$PID))
length(unique(experiment2_train$PID))+length(unique(experiment2_test$PID))
table(Hematocritexperiment6noGluc_test$stroke))
table(Hematocritexperiment6noGluc_test$stroke)
table(Hematocritexperiment6noGluc_test$stroke)
table(Hematocritexperiment6noGluc_test$outcome)
table(Hematocritexperiment6noGluc_train$outcome)
250+763
View(Hematocritexperiment6noGluc_train)
table(experiment2_train$outcome)
table(experiment2_test$outcome)
458+1401
df<-as.data.frame(rbind(Hematocritexperiment6noGluc_test,Hematocritexperiment6noGluc_train))
library(dplyr)
df %<%
group_by(PID)
df %>%
group_by(PID)
df %>%
group_by(PID) %>%
summarise(sum(outcome))
df %>%
group_by(PID) %>%
summarise(mode(outcome))
df %>%
group_by(PID)
as.numeric(as.character(df$outcome))
df$outcome
subset(df, outcome=="stroke")
df2<-subset(df, outcome=="stroke")
unique(df2$PID)
length(unique(df2$PID))
df<-as.data.frame(rbind(experiment2_test,experiment2_train))
df2<-subset(df, outcome=="stroke")
length(unique(df2$PID))
setwd("~/Packages/Optimal_Clustering_Trees/Experiments/Experiment_Real_World/Hubway")
setwd("~/Packages/Optimal_Clustering_Trees/Experiments/Experiment_Real_World/Hubway")
df<- read.csv("Hubway.csv")
df<- read.csv("HubwayTrips.csv")
str(df)
normalize <- function(temp) {
temp <- (temp - mean(temp)) / sd(temp)
return(temp)
}
str(df)
normalize <- function(temp) {
temp <- (temp - mean(temp)) / sd(temp)
return(temp)
}
lapply(df, normalize)
df_norm<-lapply(df, normalize)
df_norm<-as.data.frame(lapply(df, normalize))
View(df_norm)
clusters <- kmeans(df_norm[1:10,2:3], 5)
clusters <- kmeans(df_norm[1:100,2:3], 5)
clusters <- kmeans(df_norm[1:100,1:10], 5)
clusters <- kmeans(df_norm[1:100,1:9], 5)
View(clusters)
set.seed(20)
clusters <- kmeans(df_norm, 10)
table(clusters$cluster)
clusters$centers
df$cluster<- clusters$centers
df$cluster<- clusters$cluster
View(df)
clusters$cluster
new<-clusters$cluster
new<-clusters$centers
new
new<-as.data.frame(clusters$centers)
denormalize(df$Duration,new$Duration)
denormalize <- function(orig, new) {
temp <- (new * sd(orig)) + mean(orig)
return(temp)
}
denormalize(df$Duration,new$Duration)
df_cent<-as.data.frame(lapply(new, denormalize))
new<-as.data.frame(clusters$centers)
df_cent<-as.data.frame(lapply(df,new, denormalize))
df_cent<-as.data.frame(lapply(df, denormalize, new=new))
View(df_cent)
View(df_cent)
new<-as.data.frame(clusters$centers)
View(new)
df_cent<-as.data.frame(sapply(df, denormalize, new=new))
df_cent<-as.data.frame(apply(df, denormalize, new=new))
df_cent<-new
df_cent$Duration<-lapply(df$Duration, denormalize, new=new$Duration)
df_cent$Duration<-denormalize(df$Duration, new$Duration)
View(df_cent)
mapply(denormalize, df, new)
df_cent$Morning<-denormalize(df$Morning, new$Morning)
View(df_cent)
df_cent<-round(mapply(denormalize, df, new))
df_cent<-round(mapply(denormalize, df[,1:9], new))
clusters <- kmeans(df_norm, 9)
#Number of points in each cluster
table(clusters$cluster)
df$cluster<- clusters$cluster
new<-as.data.frame(clusters$centers)
df_cent<-round(mapply(denormalize, df[,1:9], new))
clusters <- kmeans(df_norm, 8)
#Number of points in each cluster
table(clusters$cluster)
df$cluster<- clusters$cluster
new<-as.data.frame(clusters$centers)
df_cent<-round(mapply(denormalize, df[,1:9], new))
clusters <- kmeans(df_norm, 5)
#Number of points in each cluster
table(clusters$cluster)
df$cluster<- clusters$cluster
new<-as.data.frame(clusters$centers)
df_cent<-round(mapply(denormalize, df[,1:9], new))
1:numSeeds
numSeeds <-10
numRows <-500
data <- df
for (i in 1:numSeeds) {
print(i)
}
destfile <- paste0("/data/hubway_sample_seed",i, "_obs_",numRows,".csv")
destfile
write.csv(df_cent, destfile, row.names = FALSE)
destfile <- paste0("~/data/hubway_sample_seed",i, "_obs_",numRows,".csv")
write.csv(df_cent, destfile, row.names = FALSE)
destfile <- paste0("~/Packages/Optimal_Clustering_Trees/Experiments/Experiment_Real_World/Hubway/data/hubway_sample_seed",i, "_obs_",numRows,".csv")
write.csv(df_cent, destfile, row.names = FALSE)
i=1
set.seed(i)
data[sample(nrow(data), numRows), ]
randomSampling<-function(data, numSeeds, numRows){
for (i in 1:numSeeds) {
destfile <- paste0("~/Packages/Optimal_Clustering_Trees/Experiments/Experiment_Real_World/Hubway/data/hubway_sample_seed",i, "_obs_",numRows,".csv")
set.seed(i)
df_s<-data[sample(nrow(data), numRows), ]
write.csv(df_s, destfile, row.names = FALSE)
}}
randomSampling(df[,1:9], 10, 500)
randomSampling(df[,1:9], 50, 500)
randomSampling(df[,1:9], 50, 1000)
randomSampling(df[,1:9], 50, 1500)
randomSampling(df[,1:9], 50, 2000)
randomSampling<-function(data, numSeeds, numRows){
for (i in 1:numSeeds) {
destfile <- paste0("~/Packages/Optimal_Clustering_Trees/Experiments/Experiment_Real_World/Hubway/data/random_hubway_sample_seed",i, "_obs_",numRows,".csv")
set.seed(i)
df_s<-data[sample(nrow(data), numRows), ]
write.csv(df_s, destfile, row.names = FALSE)
}}
#50 different seeds for 500 random observations
randomSampling(df[,1:9], 50, 500)
randomSampling(df[,1:9], 50, 1000)
randomSampling(df[,1:9], 50, 1500)
randomSampling(df[,1:9], 50, 2000)
stratified(data, cluster, 500, replace = FALSE)
install.packages("fifer")
library(fifer)
install.packages("stratification")
stratified(data, cluster, 500, replace = FALSE)
install.packages("splitstackshape")
library(splitstackshape)
stratified(data, cluster, 500, replace = FALSE)
View(data)
stratified(data, "cluster", 500, replace = FALSE)
df<- read.csv("HubwayTrips.csv")
df_norm<-as.data.frame(lapply(df, normalize))
set.seed(20)
numSeeds <-10
numRows <-500
data <- df
k<-4
stratifiedSampling<-function(df, numSeeds, numRows,k){
df_norm<-as.data.frame(lapply(df, normalize))
set.seed(20)
clusters <- kmeans(df_norm, k)
df$cluster<- clusters$cluster
for (i in 1:numSeeds) {
destfile <- paste0("~/Packages/Optimal_Clustering_Trees/Experiments/Experiment_Real_World/Hubway/data/strat_hubway_numofclust_",k,"_sample_seed_",i, "_obs_",numRows,".csv")
set.seed(i)
df_s<-stratified(df, "cluster", numRows, replace = FALSE)
write.csv(df_s, destfile, row.names = FALSE)
}}
stratifiedSampling(df, numSeeds, numRows,k)
randomSampling<-function(data, numSeeds, numRows){
for (i in 1:numSeeds) {
destfile <- paste0("~/Packages/Optimal_Clustering_Trees/Experiments/Experiment_Real_World/Hubway/data/random/random_hubway_sample_seed",i, "_obs_",numRows,".csv")
set.seed(i)
df_s<-data[sample(nrow(data), numRows), ]
write.csv(df_s, destfile, row.names = FALSE)
}}
#50 different seeds for 500 random observations
randomSampling(df[,1:9], 50, 500)
randomSampling(df[,1:9], 50, 1000)
randomSampling(df[,1:9], 50, 1500)
randomSampling(df[,1:9], 50, 2000)
stratifiedSampling<-function(df, numSeeds, numRows,k){
df_norm<-as.data.frame(lapply(df, normalize))
set.seed(20)
clusters <- kmeans(df_norm, k)
df$cluster<- clusters$cluster
for (i in 1:numSeeds) {
destfile <- paste0("~/Packages/Optimal_Clustering_Trees/Experiments/Experiment_Real_World/Hubway/data/stratified/strat_hubway_numofclust_",k,"_sample_seed_",i, "_obs_",numRows,".csv")
set.seed(i)
df_s<-stratified(df, "cluster", numRows, replace = FALSE)
write.csv(df_s, destfile, row.names = FALSE)
}}
for (k in 1:10) {
stratifiedSampling(df, 50, 500,k)
stratifiedSampling(df, 50, 1000,k)
stratifiedSampling(df, 50, 1500,k)
stratifiedSampling(df, 50, 2000,k)
}
