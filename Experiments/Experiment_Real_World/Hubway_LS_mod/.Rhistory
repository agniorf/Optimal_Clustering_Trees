setwd("~/git/Optimal_Clustering_Trees/Experiments/Experiment_1/LS_mod/results/")
filenames <- list.files(pattern="*.csv$", full.names=TRUE)
filenames <- setdiff(filenames, "./summary.csv")
df <- data.frame()
df_params <- data.frame()
str = filenames[1]
x <- unlist(strsplit(str, "-"))
x
dataname <- substr(x[2],1,nchar(x[2])-4); metric <- x[3];
dataname <- substr(x[2],1,nchar(x[2])-4); metric <- x[3];
dataname <- substr(x[2],1,nchar(x[2])-4); metric <- x[3];
method <- substr(x[4]); geom <- substr(x[5],1,nchar(x[5])-4);
dataname <- x[2]; metric <- x[3];
method <- x[4]; geom <- substr(x[5],1,nchar(x[5])-4);
df_next <- read.table(file = filename, sep = ",", header = T)
for (filename in filenames) {
str = filenames[1]
x <- unlist(strsplit(str, "-"))
dataname <- x[2]; metric <- x[3];
method <- x[4]; geom <- substr(x[5],1,nchar(x[5])-4);
df_next <- read.table(file = filename, sep = ",", header = T)
df_next$dataname <- dataname
df_next$metric <- metric
df_next$method <- method
df_next$geom <- geom
df <- rbind(df, df_next)
df_next <- read.table(file = filename, sep = ",", header = T)
df_params <- rbind(df_params, df_next)
}
filename = filenames[1]
str = filename
x <- unlist(strsplit(str, "-"))
dataname <- x[2]; metric <- x[3];
method <- x[4]; geom <- substr(x[5],1,nchar(x[5])-4);
df_next <- read.table(file = filename, sep = ",", header = T)
df_next$dataname <- dataname
df_next$metric <- metric
df_next$method <- method
df_next$geom <- geom
df <- rbind(df, df_next)
df_next <- read.table(file = filename, sep = ",", header = T)
df_params <- rbind(df_params, df_next)
df <- data.frame()
df_params <- data.frame()
for (filename in filenames) {
filename = filenames[1]
str = filename
x <- unlist(strsplit(str, "-"))
dataname <- x[2]; metric <- x[3];
method <- x[4]; geom <- substr(x[5],1,nchar(x[5])-4);
df_next <- read.table(file = filename, sep = ",", header = T)
df_next$dataname <- dataname
df_next$metric <- metric
df_next$method <- method
df_next$geom <- geom
df <- rbind(df, df_next)
df_next <- read.table(file = filename, sep = ",", header = T)
df_params <- rbind(df_params, df_next)
}
write.csv(df, "summary_lsmod.csv", row.names = F)
df <- data.frame()
df_params <- data.frame()
for (filename in filenames) {
str = filename
x <- unlist(strsplit(str, "-"))
dataname <- x[2]; metric <- x[3];
method <- x[4]; geom <- substr(x[5],1,nchar(x[5])-4);
df_next <- read.table(file = filename, sep = ",", header = T)
df_next$dataname <- dataname
df_next$metric <- metric
df_next$method <- method
df_next$geom <- geom
df <- rbind(df, df_next)
df_next <- read.table(file = filename, sep = ",", header = T)
df_params <- rbind(df_params, df_next)
}
df <- data.frame()
df_params <- data.frame()
for (filename in filenames) {
str = filename
x <- unlist(strsplit(str, "-"))
dataname <- x[2]; metric <- x[3];
method <- x[4]; geom <- substr(x[5],1,nchar(x[5])-4);
df_next <- read.table(file = filename, sep = ",", header = T)
df_next$dataname <- dataname
df_next$metric <- metric
df_next$method <- method
df_next$geom <- geom
df <- rbind(df, df_next)
df_next <- read.table(file = filename, sep = ",", header = T)
df_params <- rbind(df_params, df_next)
}
write.csv(df, "summary_lsmod.csv", row.names = F)
filenames <- list.files(pattern="*.csv$", full.names=TRUE)
filenames <- setdiff(filenames, "./summary.csv")
df <- data.frame()
df_params <- data.frame()
for (filename in filenames) {
str = filename
x <- unlist(strsplit(str, "-"))
dataname <- x[2]; metric <- x[3];
method <- x[4]; geom <- substr(x[5],1,nchar(x[5])-4);
df_next <- read.table(file = filename, sep = ",", header = T)
df_next$dataname <- dataname
df_next$metric <- metric
df_next$method <- method
df_next$geom <- geom
df <- rbind(df, df_next)
df_next <- read.table(file = filename, sep = ",", header = T)
df_params <- rbind(df_params, df_next)
}
filenames <- list.files(pattern="results-*.csv$", full.names=TRUE)
filenames <- list.files(pattern="*.csv$", full.names=TRUE)
filenames <- setdiff(filenames, "./summary_lsmod.csv")
df <- data.frame()
df_params <- data.frame()
for (filename in filenames) {
str = filename
x <- unlist(strsplit(str, "-"))
dataname <- x[2]; metric <- x[3];
method <- x[4]; geom <- substr(x[5],1,nchar(x[5])-4);
df_next <- read.table(file = filename, sep = ",", header = T)
df_next$dataname <- dataname
df_next$metric <- metric
df_next$method <- method
df_next$geom <- geom
df <- rbind(df, df_next)
df_next <- read.table(file = filename, sep = ",", header = T)
df_params <- rbind(df_params, df_next)
}
write.csv(df, "summary_lsmod.csv", row.names = F)
setwd("~/git/Optimal_Clustering_Trees/Experiment_Real_World/Hubway")
setwd("~/git/Optimal_Clustering_Trees/Experiments/Experiment_Real_World/Hubway")
setwd("~/git/Optimal_Clustering_Trees/Experiments/Experiment_Real_World/Hubway/LS_mod")
setwd("~/git/Optimal_Clustering_Trees/Experiments/Experiment_Real_World/Hubway_LS_mod")
df<- read.csv("HubwayTrips.csv")
df<- read.csv("HubwayTrips.csv")
#We read in from the Analytics Edge the clusters and we sample from there the data.
normalize <- function(temp) {
temp <- (temp - mean(temp)) / sd(temp)
return(temp)
}
#We read in from the Analytics Edge the clusters and we sample from there the data.
normalize <- function(temp) {
temp <- (temp - mean(temp)) / sd(temp)
return(temp)
}
#We read in from the Analytics Edge the clusters and we sample from there the data.
normalize <- function(temp) {
temp <- (temp - mean(temp)) / sd(temp)
return(temp)
}
denormalize <- function(orig, new) {
temp <- (new * sd(orig)) + mean(orig)
return(temp)
}
df_norm<-as.data.frame(lapply(df, normalize))
set.seed(20)
clusters <- kmeans(df_norm, 5)
df$cluster<- clusters$cluster
#Number of points in each cluster
table(clusters$cluster)
df$cluster<- clusters$cluster
new<-as.data.frame(clusters$centers)
df_cent<-round(mapply(denormalize, df[,1:9], new))
source('~/git/Optimal_Clustering_Trees/Experiments/Experiment_Real_World/Hubway/AE_sampling.R')
randomSampling<-function(data, numSeeds, numRows){
for (i in 1:numSeeds) {
destfile <- paste0("data/random/random_hubway_sample_seed",i, "_obs_",numRows,".csv")
set.seed(i)
df_s<-data[sample(nrow(data), numRows), ]
write.csv(df_s, destfile, row.names = FALSE)
}}
#50 different seeds for 500 random observations
randomSampling(df[,1:9], 1, 10000)
randomSampling<-function(data, numSeeds, numRows){
for (i in 1:numSeeds) {
destfile <- paste0("data/random_hubway_sample_seed",i, "_obs_",numRows,".csv")
set.seed(i)
df_s<-data[sample(nrow(data), numRows), ]
write.csv(df_s, destfile, row.names = FALSE)
}}
#50 different seeds for 500 random observations
randomSampling(df[,1:9], 1, 10000)
randomSampling(df[,1:9], 1, 20000)
randomSampling(df[,1:9], 1, 50000)
randomSampling(df[,1:9], 1, 100000)
#50 different seeds for 500 random observations
randomSampling(df[,1:9], 1, 2000)
randomSampling(df[,1:9], 1, 5000)
